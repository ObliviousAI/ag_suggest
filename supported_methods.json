["pandasPrivateSeries.Constructor", "pandasPrivateSeries.categorical_metadata", "pandasPrivateSeries.copy", "pandasPrivateSeries.describe", "pandasPrivateSeries.dropna", "pandasPrivateSeries.dtypes", "pandasPrivateSeries.isin", "pandasPrivateSeries.make_series_non_categorical", "pandasPrivateSeries.map", "pandasPrivateSeries.metadata", "pandasPrivateSeries.rename", "pandasPrivateSeries.where", "pandasPrivateSeries.count", "pandasPrivateSeries.mean", "pandasPrivateSeries.median", "pandasPrivateSeries.percentile", "pandasPrivateSeries.quantile", "pandasPrivateSeries.standard deviation", "pandasPrivateSeries.sum", "pandasPrivateSeries.variance", "pandasPrivateSeries.covariance", "pandasPrivateSeries.skew", "pandasPrivateSeries.hist", "pandasPrivateSeries.hist2d", "sklearn.tools.histogram", "sklearn.tools.histogramdd", "sklearn.tools.histogram2d", "sklearn.tools.count_nonzero", "sklearn.tools.mean", "sklearn.tools.nanmean", "sklearn.tools.std", "sklearn.tools.nanstd", "sklearn.tools.sum", "sklearn.tools.nansum", "sklearn.tools.var", "sklearn.tools.nanvar", "sklearn.tools.quantile", "sklearn.tools.percentile", "sklearn.tools.median", "sklearn.models.GaussianNB.class_prior_", "sklearn.models.GaussianNB.class_count_", "sklearn.models.GaussianNB.theta_", "sklearn.models.GaussianNB.var_", "sklearn.models.GaussianNB.epsilon_", "sklearn.models.GaussianNB.fit", "sklearn.models.GaussianNB.get_metadata_routing", "sklearn.models.GaussianNB.get_params", "sklearn.models.GaussianNB.partial_fit", "sklearn.models.GaussianNB.predict", "sklearn.models.GaussianNB.predict_joint_log_proba", "sklearn.models.GaussianNB.predict_log_proba", "sklearn.models.GaussianNB.predict_proba", "sklearn.models.GaussianNB.score", "sklearn.models.GaussianNB.set_fit_request", "sklearn.models.GaussianNB.set_params", "sklearn.models.GaussianNB.set_partial_fit_request", "sklearn.models.GaussianNB.set_score_request", "sklearn.models.GaussianNB.sigma_", "sklearn.models.LogisticRegression.classes_", "sklearn.models.LogisticRegression.coef_", "sklearn.models.LogisticRegression.intercept_", "sklearn.models.LogisticRegression.n_iter_", "sklearn.models.LogisticRegression.decision_function", "sklearn.models.LogisticRegression.densify", "sklearn.models.LogisticRegression.fit", "sklearn.models.LogisticRegression.get_metadata_routing", "sklearn.models.LogisticRegression.get_params", "sklearn.models.LogisticRegression.predict", "sklearn.models.LogisticRegression.predict_log_proba", "sklearn.models.LogisticRegression.predict_proba", "sklearn.models.LogisticRegression.score", "sklearn.models.LogisticRegression.set_fit_request", "sklearn.models.LogisticRegression.set_params", "sklearn.models.LogisticRegression.set_score_request", "sklearn.models.LogisticRegression.sparsify", "sklearn.models.RandomForestClassifier.estimator_", "sklearn.models.RandomForestClassifier.estimators_", "sklearn.models.RandomForestClassifier.classes_", "sklearn.models.RandomForestClassifier.n_classes_", "sklearn.models.RandomForestClassifier.n_features_in_", "sklearn.models.RandomForestClassifier.feature_names_in_", "sklearn.models.RandomForestClassifier.n_outputs_", "sklearn.models.RandomForestClassifier.apply", "sklearn.models.RandomForestClassifier.decision_path", "sklearn.models.RandomForestClassifier.fit", "sklearn.models.RandomForestClassifier.get_metadata_routing", "sklearn.models.RandomForestClassifier.get_params", "sklearn.models.RandomForestClassifier.predict", "sklearn.models.RandomForestClassifier.predict_log_proba", "sklearn.models.RandomForestClassifier.predict_proba", "sklearn.models.RandomForestClassifier.score", "sklearn.models.RandomForestClassifier.set_fit_request", "sklearn.models.RandomForestClassifier.set_params", "sklearn.models.RandomForestClassifier.set_score_request", "sklearn.models.DecisionTreeClassifier.n_features_in_", "sklearn.models.DecisionTreeClassifier.n_classes_", "sklearn.models.DecisionTreeClassifier.classes_", "sklearn.models.DecisionTreeClassifier.apply", "sklearn.models.DecisionTreeClassifier.decision_path", "sklearn.models.DecisionTreeClassifier.fit", "sklearn.models.DecisionTreeClassifier.get_depth", "sklearn.models.DecisionTreeClassifier.get_metadata_routing", "sklearn.models.DecisionTreeClassifier.get_n_leaves", "sklearn.models.DecisionTreeClassifier.get_params", "sklearn.models.DecisionTreeClassifier.predict", "sklearn.models.DecisionTreeClassifier.predict_log_proba", "sklearn.models.DecisionTreeClassifier.predict_proba", "sklearn.models.DecisionTreeClassifier.score", "sklearn.models.DecisionTreeClassifier.set_fit_request", "sklearn.models.DecisionTreeClassifier.set_params", "sklearn.models.DecisionTreeClassifier.set_predict_proba_request", "sklearn.models.DecisionTreeClassifier.set_predict_request", "sklearn.models.DecisionTreeClassifier.set_score_request", "sklearn.models.LinearRegression.coef_", "sklearn.models.LinearRegression.intercept_", "sklearn.models.LinearRegression.fit", "sklearn.models.LinearRegression.get_metadata_routing", "sklearn.models.LinearRegression.get_params", "sklearn.models.LinearRegression.predict", "sklearn.models.LinearRegression.score", "sklearn.models.LinearRegression.set_fit_request", "sklearn.models.LinearRegression.set_params", "sklearn.models.LinearRegression.set_score_request", "sklearn.models.KMeans.cluster_centers_", "sklearn.models.KMeans.labels_", "sklearn.models.KMeans.inertia_", "sklearn.models.KMeans.n_iter_", "sklearn.models.KMeans.fit", "sklearn.models.KMeans.fit_predict", "sklearn.models.KMeans.fit_transform", "sklearn.models.KMeans.get_feature_names_out", "sklearn.models.KMeans.get_metadata_routing", "sklearn.models.KMeans.get_params", "sklearn.models.KMeans.predict", "sklearn.models.KMeans.score", "sklearn.models.KMeans.set_fit_request", "sklearn.models.KMeans.set_output", "sklearn.models.KMeans.set_params", "sklearn.models.KMeans.set_predict_request", "sklearn.models.KMeans.set_score_request", "sklearn.models.KMeans.transform", "sklearn.models.PCA.components_", "sklearn.models.PCA.explained_variance_", "sklearn.models.PCA.explained_variance_ratio_", "sklearn.models.PCA.singular_values_", "sklearn.models.PCA.mean_", "sklearn.models.PCA.n_components_", "sklearn.models.PCA.n_features_in_", "sklearn.models.PCA.n_samples_", "sklearn.models.PCA.noise_variance_", "sklearn.models.PCA.fit", "sklearn.models.PCA.fit_transform", "sklearn.models.PCA.get_covariance", "sklearn.models.PCA.get_feature_names_out", "sklearn.models.PCA.get_metadata_routing", "sklearn.models.PCA.get_params", "sklearn.models.PCA.get_precision", "sklearn.models.PCA.inverse_transform", "sklearn.models.PCA.score", "sklearn.models.PCA.score_samples", "sklearn.models.PCA.set_output", "sklearn.models.PCA.set_params", "sklearn.models.PCA.transform", "sklearn.models.StandardScaler.scale_", "sklearn.models.StandardScaler.mean_", "sklearn.models.StandardScaler.var_", "sklearn.models.StandardScaler.n_samples_seen_", "sklearn.models.StandardScaler.fit", "sklearn.models.StandardScaler.fit_transform", "sklearn.models.StandardScaler.get_feature_names_out", "sklearn.models.StandardScaler.get_metadata_routing", "sklearn.models.StandardScaler.get_params", "sklearn.models.StandardScaler.inverse_transform", "sklearn.models.StandardScaler.partial_fit", "sklearn.models.StandardScaler.set_fit_request", "sklearn.models.StandardScaler.set_inverse_transform_request", "sklearn.models.StandardScaler.set_output", "sklearn.models.StandardScaler.set_params", "sklearn.models.StandardScaler.set_partial_fit_request", "sklearn.models.StandardScaler.set_transform_request", "sklearn.models.StandardScaler.transform", "op_snsql.Privacy", "op_snsql._PrivateReader.get_privacy_cost", "op_snsql._PrivateReader.execute", "op_snsynth.base.Synthesizer.create", "op_snsynth.base.Synthesizer.fit", "op_snsynth.base.Synthesizer.fit_sample", "op_snsynth.base.Synthesizer.list_synthesizers", "op_snsynth.base.Synthesizer.sample", "op_snsynth.base.Synthesizer.sample_conditional", "opendp.transformations.make_subset_by()", "opendp.transformations.make_count_by_categories()", "opendp.transformations.make_sized_bounded_int_checked_sum()", "opendp.transformations.make_split_lines()", "opendp.transformations.make_sized_bounded_float_checked_sum()", "opendp.transformations.make_sized_bounded_int_ordered_sum()", "opendp.transformations.make_b_ary_tree()", "opendp.measurements.make_base_laplace()", "opendp.transformations.make_index()", "opendp.transformations.make_df_cast_default()", "opendp.transformations.make_cast()", "opendp.transformations.make_user_transformation()", "opendp.transformations.make_drop_null()", "opendp.transformations.make_bounded_float_checked_sum()", "opendp.core.new_function()", "opendp.transformations.make_find_bin()", "opendp.transformations.make_bounded_int_split_sum()", "opendp.transformations.make_sized_bounded_float_ordered_sum()", "opendp.transformations.make_select_column()", "opendp.transformations.make_sized_bounded_int_monotonic_sum()", "opendp.transformations.make_count_by()", "opendp.transformations.make_count_distinct()", "opendp.transformations.make_mean()", "opendp.transformations.make_split_records()", "opendp.transformations.make_create_dataframe()", "opendp.transformations.make_bounded_int_monotonic_sum()", "opendp.transformations.make_is_equal()", "opendp.measurements.make_base_gaussian()", "opendp.transformations.make_unordered()", "opendp.transformations.make_metric_unbounded()", "opendp.transformations.make_find()", "opendp.transformations.make_is_null()", "opendp.transformations.make_metric_bounded()", "opendp.transformations.make_resize()", "opendp.transformations.make_variance()", "opendp.transformations.make_bounded_float_ordered_sum()", "opendp.transformations.make_sized_bounded_int_split_sum()", "opendp.measurements.make_user_measurement()", "opendp.measurements.make_count_by()", "opendp.transformations.make_df_is_equal()", "opendp.transformations.make_bounded_int_ordered_sum()", "opendp.transformations.make_sum()", "opendp.transformations.make_count_by_categories", "opendp.transformations.make_count()", "opendp.measurements.make_base_discrete_laplace()", "opendp.transformations.make_cast_default()", "opendp.transformations.make_consistent_b_ary_tree()", "opendp.transformations.make_quantiles_from_counts()", "opendp.transformations.make_ordered_random()", "opendp.transformations.make_clamp()", "opendp.transformations.make_split_dataframe()", "opendp.measurements.make_base_laplace_threshold()", "opendp.transformations.make_impute_uniform_float()", "opendp.transformations.make_cast_inherent()", "opendp.transformations.make_impute_constant()", "make_base_gaussian", "opendp.measurements.make_base_laplace()", "opendp.measurements.make_base_discrete_laplace_cks20()", "opendp.transformations.make_user_transformation()", "make_base_discrete_gaussian", "opendp.measurements.make_base_discrete_laplace_linear()", "opendp.core.new_function()", "make_base_geometric", "opendp.transformations.make_count_by()", "opendp.accuracy.accuracy_to_gaussian_scale()", "opendp.measurements.make_randomized_response()", "opendp.accuracy.gaussian_scale_to_accuracy()", "opendp.measurements.make_base_gaussian()", "opendp.accuracy.laplacian_scale_to_accuracy()", "opendp.measurements.make_base_discrete_gaussian()", "make_base_laplace", "opendp.measurements.make_user_measurement()", "opendp.measurements.make_randomized_response_bool()", "make_base_discrete_laplace", "opendp.measurements.make_base_discrete_laplace()", "opendp.accuracy.accuracy_to_laplacian_scale()", "opendp.measurements.make_base_laplace_threshold()", "opendp.combinators.make_population_amplification()", "make_chain_mt", "opendp.combinators.make_chain_mt()", "opendp.combinators.make_fix_delta()", "make_basic_composition", "opendp.combinators.make_chain_tm()", "make_resize", "opendp.combinators.make_chain_tt()", "make_chain_tt", "opendp.combinators.make_pureDP_to_zCDP()", "opendp.combinators.make_pureDP_to_fixed_approxDP()", "make_impute_constant", "make_sequential_composition", "opendp.transformations.make_sum()", "make_chain_tm", "opendp.measurements.make_base_discrete_laplace()", "make_cast", "make_clamp", "opendp.combinators.make_zCDP_to_approxDP()"]